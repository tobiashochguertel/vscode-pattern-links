name: Publish Extension
run-name: Publish Extension

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install pnpm
        run: |
          curl -fsSL https://get.pnpm.io/install.sh | sh -
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Run package analysis
        run: pnpm run package:analyze

      - name: Package Extension
        run: pnpm run vscode:prepublish

      - name: Package VSIX
        run: pnpm vsce package
        
      - name: Upload VSIX
        uses: actions/upload-artifact@v3
        with:
          name: extension
          path: "*.vsix"

  publish:
    name: Publish to Marketplaces
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: |
          curl -fsSL https://get.pnpm.io/install.sh | sh -
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"

      - name: Install dependencies
        run: pnpm install

      - name: Download VSIX
        uses: actions/download-artifact@v3
        with:
          name: extension

      - name: Publish to Visual Studio Marketplace
        run: |
          # Install vsce
          pnpm add -g @vscode/vsce
          
          # Publish to VS Code Marketplace
          vsce publish -p ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
        env:
          VSCODE_MARKETPLACE_TOKEN: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}

      - name: Publish to Open VSX Registry
        run: |
          # Install ovsx
          pnpm add -g ovsx
          
          # Publish to Open VSX Registry
          ovsx publish -p ${{ secrets.OVSX_TOKEN }}
        env:
          OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}

  release:
    name: Create Release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download VSIX
        uses: actions/download-artifact@v3
        with:
          name: extension
          
      - name: Create Release Notes
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          
          # Create release notes
          echo "## Release v$VERSION" > release-notes.md
          echo "### Changes" >> release-notes.md
          echo "- See commit history for changes" >> release-notes.md
          
          # Use Gitea API to create release
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITEA_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "v'"$VERSION"'",
              "name": "Release v'"$VERSION"'",
              "body": "'"$(cat release-notes.md)"'",
              "draft": false,
              "prerelease": false
            }' \
            "${{ secrets.GITEA_API_URL }}/repos/${{ github.repository }}/releases"
